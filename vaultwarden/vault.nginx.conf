upstream vault_warden {
  server localhost:8134;
}

map $http_host $vault_warden_host {
    "" $host;
    default $http_host;
}

map $http_x_forwarded_proto $vault_warden_scheme {
     default $http_x_forwarded_proto;
     "" $scheme;
}

map $http_x_forwarded_host $the_vault_warden_host {
    default $http_x_forwarded_host;
    "" $vault_warden_host;
}

map $http_upgrade $vault_warden_connection {
  default upgrade;
  ''  "";
}

# HTTP redirect to HTTPS
server {
  server_name subdomain.domain.com;
  listen 80;
  listen [::]:80;
  
  # Redirect all HTTP requests to HTTPS
  return 301 https://$host$request_uri;
}

server {
  server_name subdomain.domain.com;
  # Remove http2 completely from these lines
  listen 443 ssl;
  listen [::]:443 ssl;
  
  ssl_certificate /data/ssl/privatekey.crt;
  ssl_certificate_key /data/ssl/publickey.key;
  error_log /var/log/nginx/vault.error.log warn;
  
  # SSL settings
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;

  # Main location block
  location / {
    proxy_pass_request_headers on;
    proxy_set_header Connection "keep-alive";
    proxy_store off;
    gzip on;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    access_log /var/log/nginx/vault.access.log;

    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT, PATCH" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-Socket-ID" always;

    if ($request_method = 'OPTIONS') {
      return 204;
    }

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $vault_warden_connection;
    proxy_set_header X-Forwarded-Host $the_vault_warden_host;
    proxy_set_header X-Forwarded-Proto $vault_warden_scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass http://vault_warden;
    proxy_intercept_errors off;
    proxy_buffering off;
    proxy_http_version 1.1;
  }

  # WebSocket support for notifications
  location /notifications/hub {
    proxy_pass http://vault_warden;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # WebSocket support for API push
  location /notifications/hub/negotiate {
    proxy_pass http://vault_warden;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}